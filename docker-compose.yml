services:
  frontend:
    container_name: frontend
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile.local
    restart: always
    env_file: .env
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - "./packages/frontend/src:/usr/src/app/src"
    command: "pnpm dev --host"
    networks:
      - bookhub-network
    depends_on:
      - bookhub-database
    links:
      - bookhub-database
  backend:
    container_name: backend
    build:
      context: ./packages/backend
      dockerfile: Dockerfile.local
    restart: always
    env_file: .env
    volumes:
      - ./packages/backend:/svr/app
      - "./scripts/wait.sh:/wait.sh"
      - /svr/app/node_modules
    command: "pnpm start:dev"
    networks:
      - bookhub-network
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - bookhub-database
    links:
      - bookhub-database
  bookhub-database:
    image: postgres:12-alpine
    restart: always
    container_name: bookhub-database
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - bookhub-network
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: nest-pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '5050:80'
    depends_on:
      - bookhub-database
volumes:
  pgdata:
  pgadmin:
networks:
  bookhub-network:
    driver: bridge